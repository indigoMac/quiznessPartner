# version: "3.8"

services:
  backend-test:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend.test
    depends_on:
      - db-test
    environment:
      - POSTGRES_SERVER=db-test
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=quizness_test
      - DATABASE_URI=postgresql://postgres:postgres@db-test:5432/quizness_test
      - TEST_DATABASE_URL=postgresql://postgres:postgres@db-test:5432/quizness_test
      - ENVIRONMENT=test
      - DEBUG=False
      - SECRET_KEY=test-secret-key-for-testing
      - OPENAI_API_KEY=test-openai-key
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        echo 'Running database migrations...' &&
        alembic upgrade head &&
        echo 'Running tests...' &&
        python -m pytest tests/ -v --cov=. --cov-report=term-missing --cov-report=xml --cov-report=html
      "
    volumes:
      - ./backend:/app
      - test_coverage:/app/htmlcov
    networks:
      - test-network

  db-test:
    image: postgres:15-alpine
    ports:
      - "5434:5432" # Expose test database on port 5434
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=quizness_test
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
    networks:
      - test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Performance testing service
  locust-test:
    build:
      context: .
      dockerfile: docker/Dockerfile.locust
    depends_on:
      - backend-test
    environment:
      - TARGET_HOST=http://backend-test:8000
    ports:
      - "8089:8089"
    volumes:
      - ./backend/locustfile.py:/locust/locustfile.py
    networks:
      - test-network
    command: >
      locust -f /locust/locustfile.py --host=http://backend-test:8000

  # Test database with seed data
  db-test-seed:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=quizness_test_seed
    volumes:
      - ./backend/seed.py:/docker-entrypoint-initdb.d/seed.py
    networks:
      - test-network

volumes:
  test_postgres_data:
  test_coverage:

networks:
  test-network:
    driver: bridge
